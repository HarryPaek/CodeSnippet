VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ClsTotalProcessorArea1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

'===== ===== ===== ================================================================================
' CellValues Collection 인덱스
'  - CellValues Collection의 값은 결과 시트 Column Number Text(예, "15")를 키 값으로하여 저장
'  - 아래에 정의할 때, 반드시 문자열로 정의할 것
'===== ===== ===== ================================================================================
Private Const COLUMN_INDEX_TEXT_JB_GRP_NO            As String = "35"
Private Const COLUMN_INDEX_TEXT_JB_3                 As String = "38"
Private Const COLUMN_INDEX_TEXT_FJB_GRP_NO           As String = "44"

'================================================================================
' 별도 데이터 시트(DATA1, DATA2, DATA3) 값 주소
'================================================================================
Private Const CELL_ADDRESS_TOTAL_AREA_AREA1_FCS      As String = "E30"            ' DATA2 시트

Private Const CELL_ADDRESS_TOTAL_AREA_JB_MACRO       As String = "G29"             ' DATA2 시트
Private Const CELL_ADDRESS_TOTAL_AREA_JB1_MACRO      As String = "I29"             ' DATA2 시트
Private Const CELL_ADDRESS_TOTAL_AREA_FJB_MACRO      As String = "G30"             ' DATA2 시트

Private clsCommon As ClsWiringCommon
Private collectionExtension As ClsCollectionExtension

Private Sub Class_Initialize()

    'MsgBox "ClsTotalProcessorArea1 Class is being initialized"
    
    Set clsCommon = New ClsWiringCommon
    Set collectionExtension = New ClsCollectionExtension
    
End Sub

Private Sub Class_Terminate()
    
    'MsgBox "ClsTotalProcessorArea1 Class is being terminated"
    
    Set clsCommon = Nothing
    Set collectionExtension = Nothing

End Sub

'================================================================================================================================================================
' AREA1 처리
' 받은 Row Index 값을 가지고 필요한 경우에 +1 해서 작업
' 현재 작업한 라인 Row Index 값을 돌려 줌
'================================================================================================================================================================
Public Function Process(rowIndex As Long, ioListDataRowIndex As Long, workingSheet As Worksheet, totalAreaSheet As Worksheet, cellValues As Collection) As Long

    Dim needProcessing               As Boolean                                                                                                            ' 프로세싱 여부
    Dim localRowIndex                As Long
    Dim inStrResult                  As Integer                                                                                                            ' InStr 비교한 결과 값
    
    Dim fjbTotalAreaSheetValue       As Variant                                                                                                            ' 비교 대상으로 선택된 DATA2 Cell 값 (TAG TYPE)
    Dim jbGroupNo                    As Variant
    Dim jb3                          As Variant
    Dim fjbGroupNo                   As Variant
    
    Dim selectedCellValue            As Variant                                                                                                            ' 복사 대상으로 선택된 DATA2 Cell 값
    
    needProcessing = False
    localRowIndex = rowIndex
    
    ''jbGroupNo = cellValues.Item(COLUMN_INDEX_TEXT_JB_GRP_NO)
    jbGroupNo = collectionExtension.TryGetValue(cellValues, COLUMN_INDEX_TEXT_JB_GRP_NO)                                 'AI, IO 시트에 없는 경우를 대비하여 Extension Method 사용
    
    ''jb3 = cellValues.Item(COLUMN_INDEX_TEXT_JB_3)
    jb3 = collectionExtension.TryGetValue(cellValues, COLUMN_INDEX_TEXT_JB_3)                                            'AL, IO 시트에 없는 경우를 대비하여 Extension Method 사용
    
    ''fjbGroupNo = cellValues.Item(COLUMN_INDEX_TEXT_FJB_GRP_NO)
    fjbGroupNo = collectionExtension.TryGetValue(cellValues, COLUMN_INDEX_TEXT_FJB_GRP_NO)                               'AR, IO 시트에 없는 경우를 대비하여 Extension Method 사용
        
    fjbTotalAreaSheetValue = totalAreaSheet.Range(CELL_ADDRESS_TOTAL_AREA_AREA1_FCS)
    
    inStrResult = InStr(fjbGroupNo, fjbTotalAreaSheetValue)
    
    If (inStrResult > 0) Then                                                                                                                              ' FJB GRP NO, DATA2 시트의 FJB 값 비교
       needProcessing = True
       selectedCellValue = totalAreaSheet.Range(CELL_ADDRESS_TOTAL_AREA_FJB_MACRO)                                                                         ' FJB 매크로 삽입
    ElseIf (jb3 <> "") Then                                                                                                                                ' JB(3) 값이 있으면
       needProcessing = True
       selectedCellValue = totalAreaSheet.Range(CELL_ADDRESS_TOTAL_AREA_JB1_MACRO)                                                                         ' JB1 매크로 입력
    ElseIf (jbGroupNo > 0) Then                                                                                                                            ' JB GRP NO 값이 있으면
       needProcessing = True
       selectedCellValue = totalAreaSheet.Range(CELL_ADDRESS_TOTAL_AREA_JB_MACRO)                                                                               ' JB 매크로 입력
    End If
    
    If (needProcessing) Then                                                                                                                               ' 처리 작업이 필요하면
        localRowIndex = localRowIndex + 1
        clsCommon.SetSingleLine2AndCopyVariant localRowIndex, ioListDataRowIndex, workingSheet
        workingSheet.Cells(localRowIndex, Constants.COLUMN_INDEX_MACRO_NAME).value = selectedCellValue                                                     ' 선택된 매크로 입력
    End If
    
    Process = localRowIndex
    
End Function


