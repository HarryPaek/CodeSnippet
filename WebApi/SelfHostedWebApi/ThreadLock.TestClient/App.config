<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration" />
  </configSections>
  <appSettings>
    <add key="BaseServiceAddress" value="http://localhost:28080/" />

    <add key="log4net.Config.Watch" value="True" />                        <!-- Log4Net Assembly Configuration Override -->
    <add key="NumberOfTasks" value="100" />                               <!-- Test에 사용되는 Thread Task 개 수 -->
    <add key="NumberOfRequestsPerTask" value="10" />                      <!-- 1개 Thread Task에서 실행하는 Request 개 수 -->
    <add key="ThreadSpeepBetweenTasks" value="100" />                     <!-- Thread Task 실행 사이에, 쉬는(Gap) 시간, MiliSeconds -->
    <add key="SpeepBetweenWebRequests" value="100" />                     <!-- Client Web Request 사이에, 쉬는(Gap) 시간, MiliSeconds -->
  </appSettings>
  <startup> 
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Unity.Abstractions" publicKeyToken="489b6accfaf20ef0" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Unity.Container" publicKeyToken="489b6accfaf20ef0" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.9.7.0" newVersion="5.9.7.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <log4net>
    <appender name="CustomRollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="E:\EPLAN\Logs\%date{yyyMM}\WebApiClient_%date{yyyMMdd-HHmmss}_" />
      <datePattern value="yyyMMdd'.log'" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <maximumFileSize value="30MB" />
      <maxSizeRollBackups value="20" />
      <staticLogFileName value="false" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %level [%thread] %logger - %message%newline" />
      </layout>
      <threshold value="INFO" />
    </appender>
    <appender name="CustomDebugRollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="E:\EPLAN\Logs\%date{yyyMM}\DEBUG_WebApiClient_%date{yyyMMdd-HHmmss}_" />
      <datePattern value="yyyMMdd'.log'" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <maximumFileSize value="30MB" />
      <maxSizeRollBackups value="20" />
      <staticLogFileName value="false" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %level [%thread] %logger - %message%newline" />
      </layout>
      <threshold value="ALL" />
    </appender>
    <root>
      <appender-ref ref="CustomRollingLogFileAppender" />
      <appender-ref ref="CustomDebugRollingLogFileAppender" />
    </root>
  </log4net>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!-- Interfaces -->
    <alias alias="ILog" type="log4net.ILog, log4net" />
    <alias alias="IConfigurationProvider" type="ePlatform.Common.Abstracts.IConfigurationProvider, ePlatform.Common" />
    <alias alias="ISequenceGenerator" type="ePlatform.Common.Abstracts.ISequenceGenerator, ePlatform.Common" />
    <alias alias="IWebApiConfigurationProvider" type="ePlatform.WebApi.Abstracts.IWebApiConfigurationProvider, ePlatform.WebApi" />

    <alias alias="IWebApiClient" type="ePlatform.WebApi.Abstracts.IWebApiClient`1, ePlatform.WebApi" />

    <alias alias="ITestConfigurationProvider" type="ThreadLock.TestClient.Abstracts.ITestConfigurationProvider, ThreadLock.TestClient" />
    <alias alias="ITest" type="ThreadLock.TestClient.Abstracts.ITest, ThreadLock.TestClient" />

    <!-- Types -->
    <alias alias="Account" type="ThreadLock.Data.Models.Account, ThreadLock.Data" />
    <alias alias="EplanServiceRequest" type="ThreadLock.Data.Models.EplanServiceRequest, ThreadLock.Data" />
    
    <!-- Implementations -->
    <alias alias="DefaultConfigurationProvider" type="ePlatform.Common.Providers.DefaultConfigurationProvider, ePlatform.Common" />
    <alias alias="DefaultSequenceProvider" type="ePlatform.Common.Providers.DefaultSequenceProvider, ePlatform.Common" />
    <alias alias="WebApiConfigurationProvider" type="ePlatform.WebApi.Providers.WebApiConfigurationProvider, ePlatform.WebApi" />

    <alias alias="DefaultWebApiClient" type="ePlatform.WebApi.Clients.DefaultWebApiClient`1, ePlatform.WebApi" />

    <alias alias="DefaultTestConfigurationProvider" type="ThreadLock.TestClient.Providers.DefaultTestConfigurationProvider, ThreadLock.TestClient" />
    <alias alias="SingleTest" type="ThreadLock.TestClient.Tests.SingleTest, ThreadLock.TestClient" />
    <alias alias="MultiThreadTest" type="ThreadLock.TestClient.Tests.MultiThreadTest, ThreadLock.TestClient" />
    <alias alias="EplanServiceTest" type="ThreadLock.TestClient.Tests.EplanServiceTest, ThreadLock.TestClient" />
    <alias alias="TestFactory" type="ThreadLock.TestClient.Tests.TestFactory, ThreadLock.TestClient" />
    
    <container>
      <register type="IConfigurationProvider" mapTo="DefaultConfigurationProvider">
        <lifetime type="singleton" />
      </register>
      <register name="singleton" type="ISequenceGenerator" mapTo="DefaultSequenceProvider">
        <lifetime type="singleton" />
      </register>
      <register name="perCall" type="ISequenceGenerator" mapTo="DefaultSequenceProvider" />
      <register type="IWebApiConfigurationProvider" mapTo="DefaultTestConfigurationProvider"> <!-- WebApiConfigurationProvider -->
        <lifetime type="singleton" />
        <constructor>
          <param name="configurationProvider" type="IConfigurationProvider" />
        </constructor>
      </register>
      <register type="ITestConfigurationProvider" mapTo="DefaultTestConfigurationProvider">
        <lifetime type="singleton" />
        <constructor>
          <param name="configurationProvider" type="IConfigurationProvider" />
        </constructor>
      </register>

      <register type="IWebApiClient" mapTo="DefaultWebApiClient">
        <constructor>
          <param name="webApiConfiguration" type="IWebApiConfigurationProvider" />
          <param name="logger" type="ILog" />
        </constructor>
      </register>

      <register name="singleThread" type="ITest" mapTo="SingleTest">
        <constructor>
          <param name="client" type="IWebApiClient[Account]" />
          <param name="sequencerGenerator" type="ISequenceGenerator">
            <dependency name="singleton" type="ISequenceGenerator" />
          </param>
          <param name="logger" type="ILog" />
        </constructor>
        <property name="RandomTest" value="false" type="bool" />
      </register>
      <register name="multiThread" type="ITest" mapTo="MultiThreadTest">
        <constructor>
          <param name="testConfiguration" type="ITestConfigurationProvider" />
          <param name="logger" type="ILog" />
        </constructor>
        <property name="RandomTest" value="true" type="bool" />
      </register>
      <register name="EplanService" type="ITest" mapTo="EplanServiceTest">
        <constructor>
          <param name="client" type="IWebApiClient[EplanServiceRequest]" />
          <param name="logger" type="ILog" />
        </constructor>
      </register>
      <register name="factory" type="ITest" mapTo="TestFactory">
        <constructor>
          <param name="testCase" type="ITest">
            <dependency name="EplanService" type="ITest" />
          </param>
        </constructor>
      </register>
    </container>
  </unity>
</configuration>